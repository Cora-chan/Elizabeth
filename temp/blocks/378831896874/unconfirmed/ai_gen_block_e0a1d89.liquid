{% doc %}
  @prompt
    An interactive vertical timeline that highlights as the user scrolls

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-timeline-container-{{ ai_gen_id }} {
    max-width: 800px;
    margin: 0 auto;
    padding: {{ block.settings.section_padding }}px 20px;
    background-color: {{ block.settings.background_color }};
  }

  .ai-timeline-{{ ai_gen_id }} {
    position: relative;
    padding-left: 60px;
  }

  .ai-timeline-line-{{ ai_gen_id }} {
    position: absolute;
    left: 20px;
    top: 0;
    bottom: 0;
    width: {{ block.settings.line_width }}px;
    background-color: {{ block.settings.line_color }};
    border-radius: {{ block.settings.line_width | divided_by: 2 }}px;
  }

  .ai-timeline-progress-{{ ai_gen_id }} {
    position: absolute;
    left: 20px;
    top: 0;
    width: {{ block.settings.line_width }}px;
    background-color: {{ block.settings.active_line_color }};
    border-radius: {{ block.settings.line_width | divided_by: 2 }}px;
    transition: height 0.3s ease;
    height: 0%;
  }

  .ai-timeline-item-{{ ai_gen_id }} {
    position: relative;
    margin-bottom: {{ block.settings.item_spacing }}px;
    opacity: 0.6;
    transition: opacity 0.3s ease, transform 0.3s ease;
  }

  .ai-timeline-item-{{ ai_gen_id }}.active {
    opacity: 1;
    transform: translateX(10px);
  }

  .ai-timeline-dot-{{ ai_gen_id }} {
    position: absolute;
    left: -{{ block.settings.dot_size | divided_by: 2 | plus: block.settings.line_width | divided_by: 2 }}px;
    top: 10px;
    width: {{ block.settings.dot_size }}px;
    height: {{ block.settings.dot_size }}px;
    background-color: {{ block.settings.dot_color }};
    border: {{ block.settings.dot_border_width }}px solid {{ block.settings.dot_border_color }};
    border-radius: 50%;
    transition: all 0.3s ease;
    z-index: 2;
  }

  .ai-timeline-item-{{ ai_gen_id }}.active .ai-timeline-dot-{{ ai_gen_id }} {
    background-color: {{ block.settings.active_dot_color }};
    border-color: {{ block.settings.active_dot_border_color }};
    transform: scale(1.2);
  }

  .ai-timeline-content-{{ ai_gen_id }} {
    background-color: {{ block.settings.content_background }};
    padding: {{ block.settings.content_padding }}px;
    border-radius: {{ block.settings.content_border_radius }}px;
    border-left: 4px solid {{ block.settings.accent_color }};
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: box-shadow 0.3s ease, border-left-color 0.3s ease;
  }

  .ai-timeline-item-{{ ai_gen_id }}.active .ai-timeline-content-{{ ai_gen_id }} {
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
    border-left-color: {{ block.settings.active_accent_color }};
  }

  .ai-timeline-date-{{ ai_gen_id }} {
    font-size: {{ block.settings.date_font_size }}px;
    color: {{ block.settings.date_color }};
    font-weight: 600;
    margin-bottom: 8px;
  }

  .ai-timeline-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_font_size }}px;
    color: {{ block.settings.title_color }};
    font-weight: 700;
    margin: 0 0 12px 0;
    line-height: 1.3;
  }

  .ai-timeline-description-{{ ai_gen_id }} {
    font-size: {{ block.settings.description_font_size }}px;
    color: {{ block.settings.description_color }};
    line-height: 1.6;
    margin: 0;
  }

  @media screen and (max-width: 768px) {
    .ai-timeline-container-{{ ai_gen_id }} {
      padding: {{ block.settings.section_padding | times: 0.7 }}px 15px;
    }

    .ai-timeline-{{ ai_gen_id }} {
      padding-left: 40px;
    }

    .ai-timeline-line-{{ ai_gen_id }},
    .ai-timeline-progress-{{ ai_gen_id }} {
      left: 15px;
    }

    .ai-timeline-dot-{{ ai_gen_id }} {
      left: -{{ block.settings.dot_size | times: 0.8 | divided_by: 2 | plus: block.settings.line_width | divided_by: 2 }}px;
      width: {{ block.settings.dot_size | times: 0.8 }}px;
      height: {{ block.settings.dot_size | times: 0.8 }}px;
    }

    .ai-timeline-content-{{ ai_gen_id }} {
      padding: {{ block.settings.content_padding | times: 0.8 }}px;
    }

    .ai-timeline-title-{{ ai_gen_id }} {
      font-size: {{ block.settings.title_font_size | times: 0.9 }}px;
    }

    .ai-timeline-description-{{ ai_gen_id }} {
      font-size: {{ block.settings.description_font_size | times: 0.9 }}px;
    }
  }
{% endstyle %}

<scroll-timeline-{{ ai_gen_id }}
  class="ai-timeline-container-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-timeline-{{ ai_gen_id }}">
    <div class="ai-timeline-line-{{ ai_gen_id }}"></div>
    <div class="ai-timeline-progress-{{ ai_gen_id }}"></div>

    {% for i in (1..6) %}
      {% liquid
        assign date_key = 'item_' | append: i | append: '_date'
        assign title_key = 'item_' | append: i | append: '_title'
        assign description_key = 'item_' | append: i | append: '_description'
        assign enabled_key = 'item_' | append: i | append: '_enabled'

        assign item_date = block.settings[date_key]
        assign item_title = block.settings[title_key]
        assign item_description = block.settings[description_key]
        assign item_enabled = block.settings[enabled_key]
      %}

      {% if item_enabled %}
        <div class="ai-timeline-item-{{ ai_gen_id }}" data-timeline-item="{{ i }}">
          <div class="ai-timeline-dot-{{ ai_gen_id }}"></div>
          <div class="ai-timeline-content-{{ ai_gen_id }}">
            {% if item_date != blank %}
              <div class="ai-timeline-date-{{ ai_gen_id }}">{{ item_date }}</div>
            {% endif %}
            {% if item_title != blank %}
              <h3 class="ai-timeline-title-{{ ai_gen_id }}">{{ item_title }}</h3>
            {% endif %}
            {% if item_description != blank %}
              <div class="ai-timeline-description-{{ ai_gen_id }}">{{ item_description }}</div>
            {% endif %}
          </div>
        </div>
      {% endif %}
    {% endfor %}
  </div>
</scroll-timeline-{{ ai_gen_id }}>

<script>
  (function() {
    class ScrollTimeline{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.timelineItems = [];
        this.progressLine = null;
        this.isScrolling = false;
      }

      connectedCallback() {
        this.timelineItems = this.querySelectorAll('.ai-timeline-item-{{ ai_gen_id }}');
        this.progressLine = this.querySelector('.ai-timeline-progress-{{ ai_gen_id }}');
        
        if (this.timelineItems.length === 0) return;

        this.setupScrollListener();
        this.updateTimeline();
      }

      setupScrollListener() {
        let ticking = false;

        const scrollHandler = () => {
          if (!ticking) {
            requestAnimationFrame(() => {
              this.updateTimeline();
              ticking = false;
            });
            ticking = true;
          }
        };

        window.addEventListener('scroll', scrollHandler, { passive: true });
        window.addEventListener('resize', scrollHandler, { passive: true });
      }

      updateTimeline() {
        const containerRect = this.getBoundingClientRect();
        const viewportHeight = window.innerHeight;
        const triggerPoint = viewportHeight * 0.7;

        let activeIndex = -1;
        let maxProgress = 0;

        this.timelineItems.forEach((item, index) => {
          const itemRect = item.getBoundingClientRect();
          const itemCenter = itemRect.top + itemRect.height / 2;
          
          if (itemCenter <= triggerPoint) {
            activeIndex = index;
            item.classList.add('active');
          } else {
            item.classList.remove('active');
          }

          if (itemRect.top <= triggerPoint && itemRect.bottom >= 0) {
            const progress = Math.min(100, Math.max(0, 
              ((triggerPoint - itemRect.top) / itemRect.height) * 100
            ));
            maxProgress = Math.max(maxProgress, (index / this.timelineItems.length) * 100 + 
              (progress / this.timelineItems.length));
          }
        });

        if (activeIndex >= 0) {
          const progressPercentage = Math.min(100, 
            ((activeIndex + 1) / this.timelineItems.length) * 100
          );
          maxProgress = Math.max(maxProgress, progressPercentage);
        }

        if (this.progressLine) {
          this.progressLine.style.height = `${Math.min(100, maxProgress)}%`;
        }
      }
    }

    customElements.define('scroll-timeline-{{ ai_gen_id }}', ScrollTimeline{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Interactive timeline",
  "settings": [
    {
      "type": "header",
      "content": "Timeline items"
    },
    {
      "type": "checkbox",
      "id": "item_1_enabled",
      "label": "Enable item 1",
      "default": true
    },
    {
      "type": "text",
      "id": "item_1_date",
      "label": "Item 1 date",
      "default": "2020"
    },
    {
      "type": "text",
      "id": "item_1_title",
      "label": "Item 1 title",
      "default": "Company Founded"
    },
    {
      "type": "textarea",
      "id": "item_1_description",
      "label": "Item 1 description",
      "default": "Started our journey with a vision to create amazing products."
    },
    {
      "type": "checkbox",
      "id": "item_2_enabled",
      "label": "Enable item 2",
      "default": true
    },
    {
      "type": "text",
      "id": "item_2_date",
      "label": "Item 2 date",
      "default": "2021"
    },
    {
      "type": "text",
      "id": "item_2_title",
      "label": "Item 2 title",
      "default": "First Product Launch"
    },
    {
      "type": "textarea",
      "id": "item_2_description",
      "label": "Item 2 description",
      "default": "Launched our flagship product to great success and customer satisfaction."
    },
    {
      "type": "checkbox",
      "id": "item_3_enabled",
      "label": "Enable item 3",
      "default": true
    },
    {
      "type": "text",
      "id": "item_3_date",
      "label": "Item 3 date",
      "default": "2022"
    },
    {
      "type": "text",
      "id": "item_3_title",
      "label": "Item 3 title",
      "default": "Team Expansion"
    },
    {
      "type": "textarea",
      "id": "item_3_description",
      "label": "Item 3 description",
      "default": "Grew our team to 50+ talented individuals across multiple departments."
    },
    {
      "type": "checkbox",
      "id": "item_4_enabled",
      "label": "Enable item 4",
      "default": true
    },
    {
      "type": "text",
      "id": "item_4_date",
      "label": "Item 4 date",
      "default": "2023"
    },
    {
      "type": "text",
      "id": "item_4_title",
      "label": "Item 4 title",
      "default": "Global Expansion"
    },
    {
      "type": "textarea",
      "id": "item_4_description",
      "label": "Item 4 description",
      "default": "Expanded operations to serve customers in over 25 countries worldwide."
    },
    {
      "type": "checkbox",
      "id": "item_5_enabled",
      "label": "Enable item 5"
    },
    {
      "type": "text",
      "id": "item_5_date",
      "label": "Item 5 date"
    },
    {
      "type": "text",
      "id": "item_5_title",
      "label": "Item 5 title"
    },
    {
      "type": "textarea",
      "id": "item_5_description",
      "label": "Item 5 description"
    },
    {
      "type": "checkbox",
      "id": "item_6_enabled",
      "label": "Enable item 6"
    },
    {
      "type": "text",
      "id": "item_6_date",
      "label": "Item 6 date"
    },
    {
      "type": "text",
      "id": "item_6_title",
      "label": "Item 6 title"
    },
    {
      "type": "textarea",
      "id": "item_6_description",
      "label": "Item 6 description"
    },
    {
      "type": "header",
      "content": "Timeline style"
    },
    {
      "type": "range",
      "id": "line_width",
      "min": 2,
      "max": 8,
      "step": 1,
      "unit": "px",
      "label": "Timeline line width",
      "default": 4
    },
    {
      "type": "color",
      "id": "line_color",
      "label": "Timeline line color",
      "default": "#e5e5e5"
    },
    {
      "type": "color",
      "id": "active_line_color",
      "label": "Active line color",
      "default": "#000f9f"
    },
    {
      "type": "range",
      "id": "dot_size",
      "min": 12,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Timeline dot size",
      "default": 16
    },
    {
      "type": "color",
      "id": "dot_color",
      "label": "Dot color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "dot_border_color",
      "label": "Dot border color",
      "default": "#e5e5e5"
    },
    {
      "type": "range",
      "id": "dot_border_width",
      "min": 1,
      "max": 4,
      "step": 1,
      "unit": "px",
      "label": "Dot border width",
      "default": 2
    },
    {
      "type": "color",
      "id": "active_dot_color",
      "label": "Active dot color",
      "default": "#000f9f"
    },
    {
      "type": "color",
      "id": "active_dot_border_color",
      "label": "Active dot border color",
      "default": "#000f9f"
    },
    {
      "type": "header",
      "content": "Content style"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Section background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "content_background",
      "label": "Content background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "accent_color",
      "label": "Accent color",
      "default": "#e5e5e5"
    },
    {
      "type": "color",
      "id": "active_accent_color",
      "label": "Active accent color",
      "default": "#000f9f"
    },
    {
      "type": "range",
      "id": "content_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Content border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "content_padding",
      "min": 16,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Content padding",
      "default": 24
    },
    {
      "type": "range",
      "id": "item_spacing",
      "min": 20,
      "max": 80,
      "step": 10,
      "unit": "px",
      "label": "Item spacing",
      "default": 40
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 20,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "Section padding",
      "default": 60
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "date_font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Date font size",
      "default": 14
    },
    {
      "type": "color",
      "id": "date_color",
      "label": "Date color",
      "default": "#666666"
    },
    {
      "type": "range",
      "id": "title_font_size",
      "min": 16,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Title font size",
      "default": 20
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "description_font_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Description font size",
      "default": 14
    },
    {
      "type": "color",
      "id": "description_color",
      "label": "Description color",
      "default": "#666666"
    }
  ],
  "presets": [
    {
      "name": "Interactive timeline"
    }
  ]
}
{% endschema %}